/****************************************************************************
**
** Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:LGPL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights.  These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
**
**
**
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example maemo5/rotation
    \title Maemo 5 Rotation Example

    The Maemo 5 Rotation example shows how to use widget flags to set an application
    to either landscape, portrait or automatic rotation.

    \image maemo5-rotation-example.png Screenshot of the Rotation example

    \snippet examples/maemo5/rotation/main.cpp 1

    Qt applications are always shown in landscape mode by default. In order to set
    the application to portrait (vertical) orientation the Qt::WA_Maemo5PortraitOrientation
    attribute must be set on a top-level widget.

    \snippet examples/maemo5/rotation/main.cpp 0

    Qt::WA_Maemo5LandscapeOrientation sets the top-level widget into landscape
    (horizontal) orientation.

    \snippet examples/maemo5/rotation/main.cpp 2

    In order to make the application auto-rotate depending on the current device
    orientation, Qt::WA_Maemo5AutoOrientation must be set on a top-level widget.

    Note: The device's rotation sensor will be enabled when auto-orientation is
    switched on, which will drain extra battery power.

    Note: Auto-rotation will only work when the sliding hardware keyboard is in
    closed state, otherwise auto-rotation will always set the application into
    landscape mode.

    \snippet examples/maemo5/rotation/main.cpp 3

    Qt will handle rotation behind the scenes and re-layout all widgets accordingly.
    In order to explicitly react on screen rotation, the QDesktopWidget::resized()
    signal can be used. This signal is emitted every time the device's screen rotates.

    \snippet examples/maemo5/rotation/main.cpp 4

    If the current screen's width is larger than its height, the application is in
    landscape mode, otherwise in portrait mode.

    Note that Maemo 5 currently only supports landscape and portrait.
    Reversed landscape or reversed portrait applications are currently not possible.
*/
